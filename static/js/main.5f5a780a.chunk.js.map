{"version":3,"sources":["App.tsx","reportWebVitals.ts","index.tsx"],"names":["App","styles","globalStyle","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"oJAqBeA,MATf,WACE,OACE,oCAEE,YAAC,IAAD,CAAQC,OAAQC,MAOhBA,EAAW,mcCTFC,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,O,QCHdQ,IAASC,OACP,YAAC,IAAMC,WAAP,KACE,YAAC,IAAD,KACE,YAAC,EAAD,QAGJC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.5f5a780a.chunk.js","sourcesContent":["import React from 'react'\nimport { Global, css } from '@emotion/react'\nimport { Route, Switch } from 'react-router-dom'\nimport StoryPage from './pages/Story/StoryPage'\nimport AppLayout from './components/AppLayout/AppLayout'\nimport { useMediaQuery } from 'react-responsive'\n\n//minWidth: 768px;\nfunction Tablet({ children }: { children: React.ReactNode }) {\n  const isTablet = useMediaQuery({ minWidth: 0, maxWidth: 991 })\n  return isTablet ? <div>{children}</div> : null\n}\nfunction App() {\n  return (\n    <>\n      ddd\n      <Global styles={globalStyle} />\n    </>\n  )\n}\n\nexport default App\n\nconst globalStyle = css`\n  html,\n  body,\n  #root {\n    height: 100%;\n  }\n  html {\n    box-sizing: border-box;\n\n    * {\n      box-sizing: inherit;\n    }\n  }\n  body {\n    font-family: -apple-system, BlinkMacSystemFont, 'Helvetica Neue',\n      'Apple SD Gothic Neo', 'Malgun Gothic', '맑은 고딕', 나눔고딕,\n      'Nanum Gothic', 'Noto Sans KR', 'Noto Sans CJK KR', arial, 돋움, Dotum,\n      Tahoma, Geneva, sans-serif;\n    -webkit-font-smoothing: antialiased;\n    -moz-osx-font-smoothing: grayscale;\n    margin: 0;\n    padding: 0;\n  }\n`\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\nimport reportWebVitals from './reportWebVitals'\nimport { BrowserRouter } from 'react-router-dom'\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n)\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals()\n"],"sourceRoot":""}